import{_ as n,c as s,o as a,a as p}from"./app.98591446.js";const d='{"title":"\u624B\u5199\u5E38\u89C1\u4EE3\u7801","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6D45\u6DF1\u62F7\u8D1D","slug":"\u6D45\u6DF1\u62F7\u8D1D"},{"level":3,"title":"\u6D45\u62F7\u8D1D1","slug":"\u6D45\u62F7\u8D1D1"},{"level":3,"title":"\u6D45\u62F7\u8D1D2","slug":"\u6D45\u62F7\u8D1D2"},{"level":3,"title":"\u6DF1\u62F7\u8D1D1","slug":"\u6DF1\u62F7\u8D1D1"},{"level":3,"title":"\u6DF1\u62F7\u8D1D2","slug":"\u6DF1\u62F7\u8D1D2"},{"level":3,"title":"\u6DF1\u62F7\u8D1D3","slug":"\u6DF1\u62F7\u8D1D3"},{"level":2,"title":"\u6570\u7EC4\u6241\u5E73\u5316","slug":"\u6570\u7EC4\u6241\u5E73\u5316"},{"level":3,"title":"\u4F7F\u7528\u6570\u7EC4\u539F\u578B\u4E2D\u7684falt\u65B9\u6CD5","slug":"\u4F7F\u7528\u6570\u7EC4\u539F\u578B\u4E2D\u7684falt\u65B9\u6CD5"},{"level":3,"title":"toSting\uFF0Csplit","slug":"tosting\uFF0Csplit"},{"level":3,"title":"\u4E09\u70B9\u8FD0\u7B97\u7B26","slug":"\u4E09\u70B9\u8FD0\u7B97\u7B26"},{"level":2,"title":"\u771F\u6B63\u7684\u5192\u6CE1\u6392\u5E8F","slug":"\u771F\u6B63\u7684\u5192\u6CE1\u6392\u5E8F"}],"relativePath":"sundry/article/2022.1.29-hand-common-code.md","lastUpdated":1643539198446}',t={},e=p(`<h1 id="\u624B\u5199\u5E38\u89C1\u4EE3\u7801" tabindex="-1">\u624B\u5199\u5E38\u89C1\u4EE3\u7801 <a class="header-anchor" href="#\u624B\u5199\u5E38\u89C1\u4EE3\u7801" aria-hidden="true">#</a></h1><h2 id="\u6D45\u6DF1\u62F7\u8D1D" tabindex="-1">\u6D45\u6DF1\u62F7\u8D1D <a class="header-anchor" href="#\u6D45\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a></h2><ul><li><p>\u6D45\u62F7\u8D1D: \u62F7\u8D1D\u5BF9\u8C61\u4E2D\u7684\u7B2C\u4E00\u5C42\u5C5E\u6027\uFF0C\u5982\u679C\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF0C\u53EA\u62F7\u8D1D\u5730\u5740</p></li><li><p>\u6DF1\u62F7\u8D1D\uFF1A\u62F7\u8D1D\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\uFF0C\u5982\u679C\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF0C\u53EA\u62F7\u8D1D\u5730\u5740</p></li></ul><h3 id="\u6D45\u62F7\u8D1D1" tabindex="-1">\u6D45\u62F7\u8D1D1 <a class="header-anchor" href="#\u6D45\u62F7\u8D1D1" aria-hidden="true">#</a></h3><ul><li>\u5229\u7528es6\u7684\u6269\u5C55\u8FD0\u7B97\u7B26</li></ul><div class="language-js line-numbers-mode"><pre><code>    <span class="token comment">// \u6D45\u62F7\u8D1D</span>
    <span class="token comment">// 1,es6,\u6269\u5C55\u8FD0\u7B97\u7B26</span>
    <span class="token keyword">function</span> <span class="token function">clone1</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF08\u5BF9\u8C61\uFF0C\u6570\u7EC4\uFF09</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>target<span class="token punctuation">]</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>target <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u662F\u57FA\u672C\u6570\u636E\u7C7B\u578B\u6216\u8005\u51FD\u6570</span>
            <span class="token keyword">return</span> target
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u6D45\u62F7\u8D1D2" tabindex="-1">\u6D45\u62F7\u8D1D2 <a class="header-anchor" href="#\u6D45\u62F7\u8D1D2" aria-hidden="true">#</a></h3><ul><li>\u5229\u7528es5\u7684for(let key in target)\u904D\u5386</li></ul><div class="language-js line-numbers-mode"><pre><code>    <span class="token comment">// 2,es5,for(let key in target)</span>
    <span class="token keyword">function</span> <span class="token function">clone2</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF08\u5BF9\u8C61\uFF0C\u6570\u7EC4\uFF09</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u81EA\u8EAB\u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027\uFF0C\u4E0D\u80FD\u662F\u5BF9\u8C61\u539F\u578B\u4E2D\u7684\u5C5E\u6027</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> cloneTarget
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u662F\u57FA\u672C\u6570\u636E\u7C7B\u578B\u6216\u8005\u51FD\u6570</span>
            <span class="token keyword">return</span> target
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u6DF1\u62F7\u8D1D1" tabindex="-1">\u6DF1\u62F7\u8D1D1 <a class="header-anchor" href="#\u6DF1\u62F7\u8D1D1" aria-hidden="true">#</a></h3><ul><li>\u4E5E\u4E10\u7248\uFF0C\u4F1A\u51FA\u73B0\u51FD\u6570\u5C5E\u6027\u4F1A\u4E22\u5931\uFF0C\u5FAA\u73AF\u5F15\u7528\u4F1A\u62A5\u9519\u4E24\u4E2A\u95EE\u9898</li></ul><div class="language-js line-numbers-mode"><pre><code>    <span class="token comment">// \u5927\u4F17\u4E5E\u4E10\u7248\uFF1A\uFF08\uFF09</span>
    <span class="token keyword">function</span> <span class="token function">deepClone1</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u6DF1\u62F7\u8D1D2" tabindex="-1">\u6DF1\u62F7\u8D1D2 <a class="header-anchor" href="#\u6DF1\u62F7\u8D1D2" aria-hidden="true">#</a></h3><ul><li>\u52A0\u5F3A\u7248\uFF0C\u8FD0\u7528\u9012\u5F52\u904D\u5386\u65B9\u5F0F\uFF0C\u89E3\u51B3\u51FD\u6570\u5C5E\u6027\u4E22\u5931</li></ul><div class="language-js line-numbers-mode"><pre><code>    <span class="token comment">// \u5F3A\u5316\u4E00</span>
    <span class="token keyword">function</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF08\u5BF9\u8C61\uFF0C\u6570\u7EC4\uFF09</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u81EA\u8EAB\u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027\uFF0C\u4E0D\u80FD\u662F\u5BF9\u8C61\u539F\u578B\u4E2D\u7684\u5C5E\u6027</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> cloneTarget
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u662F\u57FA\u672C\u6570\u636E\u7C7B\u578B\u6216\u8005\u51FD\u6570</span>
            <span class="token keyword">return</span> target
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u6DF1\u62F7\u8D1D3" tabindex="-1">\u6DF1\u62F7\u8D1D3 <a class="header-anchor" href="#\u6DF1\u62F7\u8D1D3" aria-hidden="true">#</a></h3><ul><li>\u52A0\u5F3A\u5347\u7EA7\u7248</li><li>\u8FD0\u7528\u9012\u5F52\u904D\u5386\u65B9\u5F0F\uFF0C\u7F13\u5B58\u4EE5\u514B\u9686\u7684\u5BF9\u8C61\u6216\u6570\u7EC4\uFF0C\u89E3\u51B3\u51FD\u6570\u5C5E\u6027\u4E22\u5931\u548C\u5FAA\u73AF\u5F15\u7528\u4F1A\u62A5\u9519\u4E24\u4E2A\u95EE\u9898</li></ul><div class="language-js line-numbers-mode"><pre><code>    <span class="token comment">// \u5F3A\u5316\u4E8C</span>
    <span class="token comment">// \u89E3\u51B3\u51FD\u6570\u5C5E\u6027\u4E22\u5931(\u8FD0\u7528\u9012\u5F52\u904D\u5386)</span>
    <span class="token comment">// \u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\u4F1A\u62A5\u9519\u95EE\u9898(deepClone2(p),Uncaught RangeError: Maximum call stack size exceeded)</span>
    <span class="token comment">// \u5C06\u514B\u9686\u7684\u76F8\u540C\u5BF9\u8C61\u7F13\u5B58\u8D77\u6765</span>
    <span class="token keyword">function</span> <span class="token function">deepClone3</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF08\u5BF9\u8C61\uFF0C\u6570\u7EC4\uFF09</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token comment">// \u8BBE\u7F6E\u7F13\u5B58\u5BF9\u8C61</span>
            map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>cloneTarget<span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u81EA\u8EAB\u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027\uFF0C\u4E0D\u80FD\u662F\u5BF9\u8C61\u539F\u578B\u4E2D\u7684\u5C5E\u6027</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone3</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> cloneTarget
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u662F\u57FA\u672C\u6570\u636E\u7C7B\u578B\u6216\u8005\u51FD\u6570</span>
            <span class="token keyword">return</span> target
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    p<span class="token punctuation">.</span>c<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>d<span class="token punctuation">)</span>
    p<span class="token punctuation">.</span>d<span class="token punctuation">.</span>xx <span class="token operator">=</span> p<span class="token punctuation">.</span>c
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">deepClone3</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">===</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1">\u6570\u7EC4\u6241\u5E73\u5316 <a class="header-anchor" href="#\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a></h2><h3 id="\u4F7F\u7528\u6570\u7EC4\u539F\u578B\u4E2D\u7684falt\u65B9\u6CD5" tabindex="-1">\u4F7F\u7528\u6570\u7EC4\u539F\u578B\u4E2D\u7684falt\u65B9\u6CD5 <a class="header-anchor" href="#\u4F7F\u7528\u6570\u7EC4\u539F\u578B\u4E2D\u7684falt\u65B9\u6CD5" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="tosting\uFF0Csplit" tabindex="-1">toSting\uFF0Csplit <a class="header-anchor" href="#tosting\uFF0Csplit" aria-hidden="true">#</a></h3><p>\u5982\u679C\u90FD\u662F\u6570\u5B57\uFF0C\u53EF\u518D\u8FDB\u884C\u904D\u5386\u8BB2\u5B57\u7B26\u4E32\u8F6C\u4E3A\u6570\u5B57</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u4E09\u70B9\u8FD0\u7B97\u7B26" tabindex="-1">\u4E09\u70B9\u8FD0\u7B97\u7B26 <a class="header-anchor" href="#\u4E09\u70B9\u8FD0\u7B97\u7B26" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4F1A\u5C06\u6570\u7EC4\u548C\u975E\u6570\u7EC4\u5408\u5E76\u5230\u4E00\u8D77</span>
        arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u771F\u6B63\u7684\u5192\u6CE1\u6392\u5E8F" tabindex="-1">\u771F\u6B63\u7684\u5192\u6CE1\u6392\u5E8F <a class="header-anchor" href="#\u771F\u6B63\u7684\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><pre><code>        <span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1.\u83B7\u53D6\u6570\u7EC4\u7684\u957F\u5EA6</span>
            <span class="token keyword">var</span> length <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

            <span class="token comment">// 2.\u53CD\u5411\u5FAA\u73AF, \u56E0\u6B64\u6B21\u6570\u8D8A\u6765\u8D8A\u5C11</span>
            <span class="token comment">// \u5FAA\u73AFlength - 1 \u6B21</span>
            <span class="token comment">// \u5916\u9762\u662F\u4ECE\u53F3\u5F80\u5DE6</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 3.\u6839\u636Ei\u7684\u6B21\u6570, \u6BD4\u8F83\u5FAA\u73AF\u5230i\u4F4D\u7F6E</span>
                <span class="token comment">// \u8FD9\u624D\u662F\u5192\u6CE1\u6392\u5E8F\uFF01\uFF01</span>
                <span class="token comment">// \u91CC\u9762\u662F\u4ECE\u5DE6\u5F80\u53F3</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 4.\u5982\u679Cj\u4F4D\u7F6E\u6BD4j+1\u4F4D\u7F6E\u7684\u6570\u636E\u5927, \u90A3\u4E48\u5C31\u4EA4\u6362</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u4EA4\u6362</span>
                        <span class="token comment">// const temp = array[j+1]</span>
                        <span class="token comment">// array[j+1] = array[j]</span>
                        <span class="token comment">// array[j] = temp</span>
                        <span class="token comment">// \u6570\u7EC4\u7ED3\u6784\u8D4B\u503C\uFF0C\u79D2\u5440</span>
                        <span class="token punctuation">[</span>array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> array<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,28),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{d as __pageData,y as default};
