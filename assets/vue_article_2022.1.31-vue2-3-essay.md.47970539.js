import{_ as n,c as s,o as a,a as p}from"./app.efa20a37.js";const d='{"title":"vue2/3\u968F\u7B14","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7236\u7EC4\u4EF6\u83B7\u53D6\u5B50\u7EC4\u4EF6\u5B9E\u4F8B","slug":"\u7236\u7EC4\u4EF6\u83B7\u53D6\u5B50\u7EC4\u4EF6\u5B9E\u4F8B"},{"level":2,"title":"\u5171\u4EAB\u72B6\u6001","slug":"\u5171\u4EAB\u72B6\u6001"},{"level":2,"title":"reactivity\u54CD\u5E94\u5F0F\u5B9E\u73B0","slug":"reactivity\u54CD\u5E94\u5F0F\u5B9E\u73B0"},{"level":2,"title":"setup\u539F\u7406","slug":"setup\u539F\u7406"},{"level":2,"title":"render\u539F\u7406","slug":"render\u539F\u7406"},{"level":2,"title":"diff\u7B97\u6CD5","slug":"diff\u7B97\u6CD5"},{"level":2,"title":"\u81EA\u5B9A\u4E49\u6E32\u67D3\u5668","slug":"\u81EA\u5B9A\u4E49\u6E32\u67D3\u5668"}],"relativePath":"vue/article/2022.1.31-vue2-3-essay.md","lastUpdated":1643877566836}',t={},e=p(`<h1 id="vue2-3\u968F\u7B14" tabindex="-1">vue2/3\u968F\u7B14 <a class="header-anchor" href="#vue2-3\u968F\u7B14" aria-hidden="true">#</a></h1><ul><li><p>RFC\u662F\u4EC0\u4E48 request for comment(\u5F81\u6C42\u610F\u89C1\uFF0Cvue\u5411\u793E\u533A\u5F81\u6C42\u610F\u89C1)</p><p><a href="https://github.com/vuejs/rfcs" target="_blank" rel="noopener noreferrer">https://github.com/vuejs/rfcs</a></p></li><li><p>vue3\u4E2D\u6587\u6587\u6863 \u975E\u5B98\u65B9\uFF0C\u4F46\u6709\u5F88\u591A\u5B66\u4E60\u3001\u9762\u8BD5\u3001\u5B9E\u6218\u8D44\u6599</p><p><a href="https://vue3js.cn/" target="_blank" rel="noopener noreferrer">https://vue3js.cn/</a></p></li></ul><h2 id="\u7236\u7EC4\u4EF6\u83B7\u53D6\u5B50\u7EC4\u4EF6\u5B9E\u4F8B" tabindex="-1">\u7236\u7EC4\u4EF6\u83B7\u53D6\u5B50\u7EC4\u4EF6\u5B9E\u4F8B <a class="header-anchor" href="#\u7236\u7EC4\u4EF6\u83B7\u53D6\u5B50\u7EC4\u4EF6\u5B9E\u4F8B" aria-hidden="true">#</a></h2><p>\u5173\u952E\u70B9\uFF1A\u9700\u8981\u4F7F\u7528defineExpose</p><p>\u7236\u7EC4\u4EF6</p><div class="language-vue line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span>onMounted<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>
<span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">&quot;./components/HelloWorld.vue&quot;</span>

<span class="token keyword">const</span> helloComp <span class="token operator">=</span> ref<span class="token operator">&lt;</span>HTMLElement<span class="token operator">|</span><span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>helloComp<span class="token punctuation">,</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  helloComp<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  hello
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HelloWorld</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helloComp<span class="token punctuation">&quot;</span></span> <span class="token attr-name">msg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wocao<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HelloWorld</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5B50\u7EC4\u4EF6</p><div class="language-vue line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  defineProps <span class="token operator">&lt;</span> <span class="token punctuation">{</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> string <span class="token punctuation">}</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
  
  <span class="token keyword">const</span> <span class="token function-variable function">sayHello</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;i&#39;m helloworld,hello!!!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4F7F\u7528setup\u8BED\u6CD5\u7CD6\u540E\uFF0C\u5B50\u7EC4\u4EF6\u9ED8\u8BA4\u4E0D\u4F1A\u5411\u7236\u7EC4\u4EF6\u66B4\u9732\u53D8\u91CF\uFF0C\u65B9\u6CD5\u3002\u9700\u8981\u4F7F\u7528defineExpose\u66B4\u9732</span>
  <span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span>sayHello<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  helloasfdsdf
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u5171\u4EAB\u72B6\u6001" tabindex="-1">\u5171\u4EAB\u72B6\u6001 <a class="header-anchor" href="#\u5171\u4EAB\u72B6\u6001" aria-hidden="true">#</a></h2><p>\u7F16\u5199\u4E00\u4E2A\u516C\u5171\u51FD\u6570usePromise\u51FD\u6570\u9700\u6C42\u5982\u4E0B\uFF1A</p><p>\u4F20\u5165\u4E00\u4E2Afunction\u7C7B\u578B\u53C2\u6570\uFF0C\u91CC\u9762\u6267\u884C\u5F02\u6B65\u4EE3\u7801\u3002\u8981\u6C42usePromise\u8FD4\u56DE\u4EE5\u4E0B\u5C5E\u6027\u3002</p><ul><li>results : \u8FD4\u56DEPromise\u6267\u884C\u7ED3\u679C</li><li>loading\uFF1A \u8FD4\u56DEPromise\u8FD0\u884C\u72B6\u6001 <ul><li>PENDING :true</li><li>REJECTED : false</li><li>RESOLVED: false</li></ul></li><li>error \uFF1A \u8FD4\u56DE\u6267\u884C\u9519\u8BEF</li></ul><div class="language-vue line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token comment">// \u8F93\u5165\u6846\u503C</span>
<span class="token keyword">let</span> input <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// \u6839\u636E\u8F93\u5165\u6846\u503C\uFF0C\u641C\u7D22\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">searchInput</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">str</span><span class="token operator">:</span> String</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528Promise\uFF0C</span>
<span class="token comment">// promise\u662F\u4EC0\u4E48\uFF1F\u72B6\u6001\u96C6</span>
<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">usePromise</span><span class="token punctuation">(</span>searchInput<span class="token punctuation">)</span>

<span class="token function">watch</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span>results<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">createPromise</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4F7F\u7528\u72B6\u6001\u96C6</span>
<span class="token keyword">function</span> <span class="token function">usePromise</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fn</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> error <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> results <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u4E00\u4E2A\u65B9\u6CD5,\u6539\u53D8\u72B6\u6001\u96C6\uFF0C\u4E5F\u5C5E\u4E8E\u72B6\u6001\u96C6,</span>
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createPromise</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args<span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
    error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>
    results<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      results<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      error<span class="token punctuation">.</span>value <span class="token operator">=</span> error<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DE\u72B6\u6001\u96C6</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> loading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> results<span class="token punctuation">,</span> createPromise <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  \u8F93\u5165\uFF1A
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  loading\uFF1A{{ res.loading }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  error:{{ res.error }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  results:{{ res.results }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><h2 id="reactivity\u54CD\u5E94\u5F0F\u5B9E\u73B0" tabindex="-1">reactivity\u54CD\u5E94\u5F0F\u5B9E\u73B0 <a class="header-anchor" href="#reactivity\u54CD\u5E94\u5F0F\u5B9E\u73B0" aria-hidden="true">#</a></h2><p>\u4E00\u5F00\u59CB\uFF0C\u7B80\u5355\u70B9</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// v1</span>

<span class="token comment">// let a = 10;</span>
<span class="token comment">// let b = a + 10;</span>
<span class="token comment">// console.log(b);</span>

<span class="token comment">// a = 20;</span>
<span class="token comment">// b = a + 10;</span>
<span class="token comment">// console.log(b);</span>


<span class="token comment">// v2</span>

<span class="token comment">// let a = 10;</span>
<span class="token comment">// let b</span>
<span class="token comment">// update()</span>
<span class="token comment">// function update() {</span>
<span class="token comment">//     b = a + 10;</span>
<span class="token comment">//     console.log(b);</span>
<span class="token comment">// }</span>

<span class="token comment">// a = 20;</span>
<span class="token comment">// update()</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u4F7F\u7528\u5B98\u65B9api</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">import</span>  <span class="token punctuation">{</span>effect<span class="token punctuation">,</span> reactive<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vue/reactivity&quot;</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    value<span class="token operator">:</span><span class="token number">19</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> b<span class="token punctuation">;</span>
<span class="token comment">// effect\u51FD\u6570\uFF0C\u5F53\u56DE\u8C03\u91CC\u9762\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u518D\u6B21\u6267\u884C\u56DE\u8C03</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    b <span class="token operator">=</span> a<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">10</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

a<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">29</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u540D\u4E3Areactivity.ts\uFF0C\u5BFC\u51FAeffectWatch\u51FD\u6570\uFF0Creactivity\u51FD\u6570</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// \u5F53\u524Ddep\u5B9E\u4F8B\u662F\u5426\u6709\u4F9D\u8D56\u51FD\u6570</span>
<span class="token keyword">let</span> currentEffect<span class="token operator">:</span><span class="token builtin">Function</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token comment">// dep\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F9D\u8D56\u51FD\u6570\u96C6\u5408</span>
    effects<span class="token operator">:</span> Set<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F53\u524Ddep\u7684\u503C\uFF08dep\u4E5F\u5C31\u662F\u4E00\u4E2A\u54CD\u5E94\u5F0F\u6570\u636E\uFF09</span>
    _val<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5F53\u524Ddep\u7684\u503C</span>
    <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_val
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BBE\u7F6E\u5F53\u524Ddep\u7684\u503C</span>
    <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5B9E\u4F8Bdep\u65F6\u505A\u4E24\u4E2A\u64CD\u4F5C\uFF0C\u521B\u5EFA\u4E00\u4E2A\u7A7A\u7684\u4F9D\u8D56\u96C6\u5408\uFF0C\u521D\u59CB\u5316\u503C</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>effects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_val <span class="token operator">=</span> val
    <span class="token punctuation">}</span>
    <span class="token comment">// 1. \u6536\u96C6\u4F9D\u8D56</span>
    <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>currentEffect<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>effects<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>currentEffect<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 2. \u89E6\u53D1\u4F9D\u8D56</span>
    <span class="token function">notice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u89E6\u53D1\u4E00\u4E0B\u6211\u4EEC\u4E4B\u524D\u6536\u96C6\u5230\u7684\u4F9D\u8D56</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>effects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>effect<span class="token operator">=&gt;</span><span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">effectWatch</span><span class="token punctuation">(</span>effect<span class="token operator">:</span><span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6536\u96C6\u4F9D\u8D56</span>
    currentEffect <span class="token operator">=</span> effect
    <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    currentEffect <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>\u6D4B\u8BD5\u4E00\u4E0B</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// \u6D4B\u8BD5</span>
ref <span class="token operator">--</span><span class="token operator">&gt;</span> \u5F88\u50CF\u4E86\u3002
<span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> b<span class="token punctuation">;</span>

<span class="token function">effectWatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    b <span class="token operator">=</span> dep<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">10</span>
    <span class="token comment">// console.log(b);</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u503C\u53D1\u751F\u53D8\u66F4</span>
dep<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">20</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6700\u540E\uFF0C\u7EE7\u7EED\u5728\u8FD9\u4E2A\u6587\u4EF6\u4E2D\u5B9E\u73B0reactivity</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// reactive</span>
<span class="token comment">// dep -&gt; number string</span>
<span class="token comment">// object -&gt; key -&gt; dep</span>

<span class="token comment">// 1.\u8FD9\u4E2A\u5BF9\u8C61\u5728\u4EC0\u4E48\u65F6\u5019\u6539\u53D8\u7684</span>
<span class="token comment">// object.a -&gt; get</span>
<span class="token comment">// object.a = 2 -&gt; set</span>

<span class="token comment">// vue2 defineProperty</span>
<span class="token comment">// vue3 proxy</span>
<span class="token keyword">const</span> depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getDep</span><span class="token punctuation">(</span>target<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// let depsMap = targetMap.get(target)</span>
    <span class="token comment">// if(!depsMap){</span>
    <span class="token comment">//     depsMap = new Map()</span>
    <span class="token comment">//     targetMap.set(target,depsMap)</span>
    <span class="token comment">// }</span>
    <span class="token keyword">let</span> dep <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>dep<span class="token punctuation">)</span><span class="token punctuation">{</span>
        dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        depsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dep<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span>raw<span class="token operator">:</span>Object<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>raw<span class="token punctuation">,</span><span class="token punctuation">{</span>
        <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// key - dep</span>
            <span class="token comment">// dep \u6211\u4EEC\u5B58\u50A8\u5728\u54EA\u91CC</span>
            <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token function">getDep</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u4F9D\u8D56\u6536\u96C6</span>
            dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// return target[key]</span>
            <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">)</span>
            <span class="token comment">// return dep.value // \u8FD9\u91CC\u8FD4\u56DE\u7684\u662Fdep\u7684\u503C\uFF0C\u90A3\u4E48\u6539\u53D8\u4EE3\u7406\u7684\u503C\u65F6\u4E5F\u8981\u6539\u53D8\u5BF9\u5E94dep\u7684\u503C\u3002</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u89E6\u53D1\u4F9D\u8D56</span>
            <span class="token comment">// \u8981\u83B7\u53D6\u5230dep</span>
            <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token function">getDep</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span>
            dep<span class="token punctuation">.</span><span class="token function">notice</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>            
            <span class="token keyword">return</span> result
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>\u6D4B\u8BD5</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">let</span> user  <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    age<span class="token operator">:</span><span class="token number">19</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">effectWatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="setup\u539F\u7406" tabindex="-1">setup\u539F\u7406 <a class="header-anchor" href="#setup\u539F\u7406" aria-hidden="true">#</a></h2><p>index.html\u4E2D</p><div class="language-html line-numbers-mode"><pre><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./main.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5F15\u5165\u7684main.js</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>effectWatch<span class="token punctuation">,</span>reactive<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./reactivity.js&#39;</span>

<span class="token comment">// vue3</span>
<span class="token comment">// \u6839\u7EC4\u4EF6</span>
<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6240\u8C13\u7684\u4E0A\u4E0B\u6587\uFF0C\u7C7B\u578B\u5C31\u662F\u4E00\u4E2A\u5BF9\u8C61</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">effectWatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token comment">// \u6784\u5EFAview = b</span>
            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
            <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> context<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// root</span>
            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> context
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// \u65B9\u4FBF\u5728\u6D4F\u89C8\u5668\u8C03\u9002</span>
        window<span class="token punctuation">.</span>state <span class="token operator">=</span> state
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>state<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>state<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6267\u884C\u6E32\u67D3\u51FD\u6570</span>
App<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u6362\u4E00\u79CD\u65B9\u5F0F</p><p>\u76EE\u5F55\u7ED3\u6784\uFF1A</p><ul><li>my-test <ul><li>core <ul><li>reactivity.js</li><li>index.js</li></ul></li><li>App.js // \u6839\u7EC4\u4EF6</li><li>index.html // \u6A21\u677F</li><li>main.js // \u88AB\u6A21\u677F\u5F15\u5165</li></ul></li></ul><p>core/index.js</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>effectWatch<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./reactivity.js&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token parameter">rootComponent</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function">mount</span><span class="token punctuation">(</span><span class="token parameter">rootContainer</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            
            <span class="token keyword">const</span> context <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">effectWatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                rootContainer<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>
                <span class="token keyword">const</span> element <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>

                rootContainer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>App.js</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./core/reactivity.js&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// App\u6839\u7EC4\u4EF6  rootComponent</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// view --&gt; \u6BCF\u6B21\u6211\u90FD\u9700\u8981\u91CD\u65B0\u7684\u521B\u5EFA</span>
        <span class="token comment">// \u8981\u8BA1\u7B97\u51FA\u6700\u5C0F\u7684\u66F4\u65B0\u70B9 -&gt; vdo</span>
        <span class="token comment">// js --&gt; diff</span>
        <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> context<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
        <span class="token keyword">return</span> div
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// \u65B9\u4FBF\u5728\u6D4F\u89C8\u5668\u8C03\u9002</span>
        window<span class="token punctuation">.</span>state <span class="token operator">=</span> state
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> state <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>index.html,\u5C31\u662F\u5F15\u5165main.js\u6587\u4EF6</p><p>main.js\u6587\u4EF6</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> App <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./App.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./core/index.js&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// main.js\u7684\u5DE5\u4F5C</span>
<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="render\u539F\u7406" tabindex="-1">render\u539F\u7406 <a class="header-anchor" href="#render\u539F\u7406" aria-hidden="true">#</a></h2><p>h\u51FD\u6570\u7684\u4F5C\u7528</p><p><code>import { h } from &quot;./core/h.js&quot;;</code></p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u8282\u70B9 vdom vnode</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">h</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span>props<span class="token punctuation">,</span>children</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        tag<span class="token punctuation">,</span>
        props<span class="token punctuation">,</span>
        children
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u66F4\u6539App.js</p><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./core/reactivity.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./core/h.js&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// App\u6839\u7EC4\u4EF6  rootComponent</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// view --&gt; \u6BCF\u6B21\u6211\u90FD\u9700\u8981\u91CD\u65B0\u7684\u521B\u5EFA</span>
        <span class="token comment">// \u8981\u8BA1\u7B97\u51FA\u6700\u5C0F\u7684\u66F4\u65B0\u70B9 -&gt; vdo</span>
        <span class="token comment">// js --&gt; diff</span>

        <span class="token comment">// const div = document.createElement(&quot;div&quot;);</span>
        <span class="token comment">// div.innerText = context.state.count;</span>
        <span class="token comment">// return div</span>
        <span class="token comment">// return h(&quot;div&quot;,{</span>
        <span class="token comment">//     id:113</span>
        <span class="token comment">// },String(context.state.count))</span>
        <span class="token comment">// \u521B\u5EFA\u865A\u62DF\u8282\u70B9</span>
        <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">113</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">&#39;oo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// \u65B9\u4FBF\u5728\u6D4F\u89C8\u5668\u8C03\u9002</span>
        window<span class="token punctuation">.</span>state <span class="token operator">=</span> state
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> state <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>core/index.js \u521B\u5EFA\u865A\u62DF\u8282\u70B9</p><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br><br><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>effectWatch<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./reactivity.js&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mountElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../renderer.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token parameter">rootComponent</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function">mount</span><span class="token punctuation">(</span><span class="token parameter">rootContainer</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            
            <span class="token keyword">const</span> context <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">effectWatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                rootContainer<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>
                <span class="token comment">// subTree,\u865A\u62DF\u8282\u70B9</span>
                <span class="token keyword">const</span> subTree <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
                <span class="token function">mountElement</span><span class="token punctuation">(</span>subTree<span class="token punctuation">,</span>rootContainer<span class="token punctuation">)</span>

                <span class="token comment">// rootContainer.append(element)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>core/renderer.js, mountElement\u51FD\u6570</p><p>\u5C06\u865A\u62DF\u8282\u70B9\u8F6C\u5316\u4E3A\u771F\u5B9Edom\u8282\u70B9</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// vdom --&gt; dom</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mountElement</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span>container</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>tag<span class="token punctuation">,</span>props<span class="token punctuation">,</span>children<span class="token punctuation">}</span> <span class="token operator">=</span> vnode<span class="token punctuation">;</span>
    <span class="token comment">// tag</span>
    <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>
    <span class="token comment">//props:Object</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> props<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">const</span> val <span class="token operator">=</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>val<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// children</span>
    <span class="token comment">// 1.\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2Astring</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> children <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> textNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span>
        el<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>textNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u904D\u5386</span>
        children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token function">mountElement</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>el<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2.\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4</span>
    

    <span class="token comment">// \u63D2\u5165</span>
    container<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="diff\u7B97\u6CD5" tabindex="-1">diff\u7B97\u6CD5 <a class="header-anchor" href="#diff\u7B97\u6CD5" aria-hidden="true">#</a></h2><p>App.js \uFF08\u6839\u7EC4\u4EF6\uFF09 \u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5F53state.count\u53D8\u5316\u65F6\uFF0Cdom\u4F1A\u8FDB\u884C\u5168\u90E8\u66F4\u65B0</p><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./core/reactivity.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./core/h.js&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// App\u6839\u7EC4\u4EF6  rootComponent</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">113</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token function">String</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">&#39;oo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// \u65B9\u4FBF\u5728\u6D4F\u89C8\u5668\u8C03\u9002</span>
        window<span class="token punctuation">.</span>state <span class="token operator">=</span> state
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> state <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>main.js</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> App <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./App.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./core/index.js&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// vue3</span>

<span class="token comment">// main.js\u7684\u5DE5\u4F5C</span>
<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>h.js</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u8282\u70B9 vdom vnode</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">h</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span>props<span class="token punctuation">,</span>children</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        tag<span class="token punctuation">,</span>
        props<span class="token punctuation">,</span>
        children
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>index.js\uFF0C\u5BFC\u51FAcreateApp\u51FD\u6570</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> effectWatch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./reactivity.js&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mountElement<span class="token punctuation">,</span>diff <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../renderer.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token parameter">rootComponent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function">mount</span><span class="token punctuation">(</span><span class="token parameter">rootContainer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> context <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> isMounted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> prevSubTree<span class="token punctuation">;</span>

            <span class="token function">effectWatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                rootContainer<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// init</span>
                    <span class="token comment">// subTree,\u865A\u62DF\u8282\u70B9</span>
                    isMounted <span class="token operator">=</span> <span class="token boolean">true</span>
                    <span class="token keyword">const</span> subTree <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
                    <span class="token function">mountElement</span><span class="token punctuation">(</span>subTree<span class="token punctuation">,</span> rootContainer<span class="token punctuation">)</span>
                    prevSubTree <span class="token operator">=</span> subTree<span class="token punctuation">;</span>
                    <span class="token comment">// rootContainer.append(element)</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token comment">// update</span>
                    <span class="token keyword">const</span> subTree <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
                    <span class="token function">diff</span><span class="token punctuation">(</span>prevSubTree<span class="token punctuation">,</span>subTree<span class="token punctuation">)</span>
                    <span class="token comment">// mountElement(subTree, rootContainer)</span>
                    prevSubTree <span class="token operator">=</span> subTree<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>renderer.js\uFF0C\u5BFC\u51FAmountElment\u548Cdiff\u51FD\u6570</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// n1 oldVnode</span>
<span class="token comment">// n2 newVnode</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">diff</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span>n2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 1. tag</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>tag <span class="token operator">!==</span> n2<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">{</span>
        n1<span class="token punctuation">.</span>el<span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u7EC6\u8282</span>
        <span class="token keyword">const</span> el <span class="token operator">=</span> n2<span class="token punctuation">.</span>el <span class="token operator">=</span> n1<span class="token punctuation">.</span>el<span class="token punctuation">;</span>
        <span class="token comment">// 2. props</span>
        <span class="token comment">// new: {id:&quot;foo&quot;,class:&quot;bar&quot;,a}</span>
        <span class="token comment">// old: {id:&quot;foo&quot;,class:&quot;bar1&quot;,a,b}</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">props</span><span class="token operator">:</span>newProps<span class="token punctuation">}</span> <span class="token operator">=</span> n2<span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">props</span><span class="token operator">:</span>oldProps<span class="token punctuation">}</span> <span class="token operator">=</span> n1<span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>newProps <span class="token operator">&amp;&amp;</span> oldProps<span class="token punctuation">)</span><span class="token punctuation">{</span>
            Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>newProps<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token keyword">const</span> newVal <span class="token operator">=</span> newProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">const</span> oldVal <span class="token operator">=</span> oldProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>newVal <span class="token operator">!==</span> oldVal<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>newVal<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>oldProps<span class="token punctuation">)</span><span class="token punctuation">{</span>
            Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>oldProps<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>newProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    el<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 3. children --&gt; (\u66B4\u529B\u89E3\u6CD5)</span>
        <span class="token comment">//      1.newChildren --&gt; string(oldChildren --&gt; string oldChildren --&gt; array)</span>
        <span class="token comment">//      2.newChildren --&gt; array(oldChildren --&gt; string oldChildren --&gt; array)</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">children</span><span class="token operator">:</span>newChildren<span class="token punctuation">}</span> <span class="token operator">=</span> n2<span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">children</span><span class="token operator">:</span>oldChildren<span class="token punctuation">}</span> <span class="token operator">=</span> n1<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> newChildren <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> oldChildren <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>newChildren <span class="token operator">!==</span> oldChildren<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    el<span class="token punctuation">.</span>textContent <span class="token operator">=</span> newChildren
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                el<span class="token punctuation">.</span>textContent <span class="token operator">=</span> newChildren<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>newChildren<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> oldChildren <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                el<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
                <span class="token function">mountElement</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span>el<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// new {a,b,c,d,f}</span>
                <span class="token comment">// old {a,e,c,d}</span>

                <span class="token keyword">const</span> length <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>newChildren<span class="token punctuation">.</span>length<span class="token punctuation">,</span>oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span>

                <span class="token comment">// \u5904\u7406\u516C\u5171\u7684vnode</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>index<span class="token operator">&lt;</span>length<span class="token punctuation">;</span>index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">const</span> newVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
                    <span class="token keyword">const</span> oldVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
                    <span class="token function">diff</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span>newVnode<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span>newChildren<span class="token punctuation">.</span>length<span class="token operator">&gt;</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u521B\u5EFA\u8282\u70B9</span>
                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> index<span class="token operator">=</span>length<span class="token punctuation">;</span>index<span class="token operator">&lt;</span>newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span>index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token keyword">const</span> newVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
                        <span class="token function">mountElement</span><span class="token punctuation">(</span>newVnode<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">.</span>lenght <span class="token operator">&gt;</span> length<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u5220\u9664\u8282\u70B9</span>
                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> length<span class="token punctuation">;</span> index<span class="token operator">&lt;</span>oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span>index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token keyword">const</span> oldVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
                        oldVnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>


<span class="token comment">// vdom --&gt; dom</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mountElement</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span>container</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>tag<span class="token punctuation">,</span>props<span class="token punctuation">,</span>children<span class="token punctuation">}</span> <span class="token operator">=</span> vnode<span class="token punctuation">;</span>
    <span class="token comment">// tag</span>
    <span class="token keyword">const</span> el <span class="token operator">=</span> vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>
    <span class="token comment">//props:Object</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> props<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">const</span> val <span class="token operator">=</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>val<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// children</span>
    <span class="token comment">// 1.\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2Astring</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> children <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> textNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span>
        el<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>textNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u904D\u5386</span>
        children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token function">mountElement</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>el<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2.\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4</span>
    
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u63D2\u5165</span>
    container<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br></div></div><h2 id="\u81EA\u5B9A\u4E49\u6E32\u67D3\u5668" tabindex="-1">\u81EA\u5B9A\u4E49\u6E32\u67D3\u5668 <a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6E32\u67D3\u5668" aria-hidden="true">#</a></h2>`,64),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var g=n(t,[["render",c]]);export{d as __pageData,g as default};
